digraph parse_tree {
 0 [label="root"];
 1 [label="assignmentStatement"];
 0 -> 1;
 2 [label="assignmentStatement"];
 0 -> 2;
 3 [label="assignmentStatement"];
 0 -> 3;
 4 [label="assignmentStatement"];
 0 -> 4;
 5 [label="assignmentStatement"];
 0 -> 5;
 6 [label="assignmentStatement"];
 0 -> 6;
 7 [label="assignmentStatement"];
 0 -> 7;
 8 [label="assignmentStatement"];
 0 -> 8;
 9 [label="while loop"];
 0 -> 9;
 10 [label="if statement"];
 0 -> 10;
 11 [label="assignmentStatement"];
 0 -> 11;
 12 [label="assignmentStatement"];
 0 -> 12;
 13 [label="assignmentStatement"];
 0 -> 13;
 14 [label="while loop"];
 0 -> 14;
 15 [label="assignmentStatement"];
 0 -> 15;
 16 [label="expressionStatement"];
 0 -> 16;
 17 [label="if statement"];
 0 -> 17;
 18 [label="assignmentStatement"];
 0 -> 18;
 19 [label="expressionStatement"];
 0 -> 19;
 20 [label="IDENTIFIER"];
 1 -> 20;
 21 [label="="];
 1 -> 21;
 22 [label="atomExpression"];
 1 -> 22;
 23 [label="IDENTIFIER"];
 2 -> 23;
 24 [label="="];
 2 -> 24;
 25 [label="atomExpression"];
 2 -> 25;
 26 [label="IDENTIFIER"];
 3 -> 26;
 27 [label="="];
 3 -> 27;
 28 [label="atomExpression"];
 3 -> 28;
 29 [label="IDENTIFIER"];
 4 -> 29;
 30 [label="="];
 4 -> 30;
 31 [label="atomExpression"];
 4 -> 31;
 32 [label="IDENTIFIER"];
 5 -> 32;
 33 [label="="];
 5 -> 33;
 34 [label="atomExpression"];
 5 -> 34;
 35 [label="IDENTIFIER"];
 6 -> 35;
 36 [label="="];
 6 -> 36;
 37 [label="atomExpression"];
 6 -> 37;
 38 [label="IDENTIFIER"];
 7 -> 38;
 39 [label="="];
 7 -> 39;
 40 [label="atomExpression"];
 7 -> 40;
 41 [label="IDENTIFIER"];
 8 -> 41;
 42 [label="="];
 8 -> 42;
 43 [label="atomExpression"];
 8 -> 43;
 44 [label="condition"];
 9 -> 44;
 45 [label="body"];
 9 -> 45;
 46 [label="'if' block"];
 10 -> 46;
 47 [label="'elif' block"];
 10 -> 47;
 48 [label="'else' block"];
 10 -> 48;
 49 [label="IDENTIFIER"];
 11 -> 49;
 50 [label="="];
 11 -> 50;
 51 [label="atomExpression"];
 11 -> 51;
 52 [label="IDENTIFIER"];
 12 -> 52;
 53 [label="="];
 12 -> 53;
 54 [label="atomExpression"];
 12 -> 54;
 55 [label="IDENTIFIER"];
 13 -> 55;
 56 [label="="];
 13 -> 56;
 57 [label="atomExpression"];
 13 -> 57;
 58 [label="target"];
 14 -> 58;
 59 [label="iterable"];
 14 -> 59;
 60 [label="body"];
 14 -> 60;
 61 [label="IDENTIFIER"];
 15 -> 61;
 62 [label="="];
 15 -> 62;
 63 [label="addExpression"];
 15 -> 63;
 64 [label="functionCallExpression"];
 16 -> 64;
 65 [label="'if' block"];
 17 -> 65;
 66 [label="IDENTIFIER"];
 18 -> 66;
 67 [label="="];
 18 -> 67;
 68 [label="mulExpression"];
 18 -> 68;
 69 [label="functionCallExpression"];
 19 -> 69;
 70 [label="name"];
 20 -> 70;
 71 [label="stringAtom"];
 22 -> 71;
 72 [label="charmender_HP"];
 23 -> 72;
 73 [label="intAtom"];
 25 -> 73;
 74 [label="squirtle_HP"];
 26 -> 74;
 75 [label="intAtom"];
 28 -> 75;
 76 [label="bulbasaur_HP"];
 29 -> 76;
 77 [label="intAtom"];
 31 -> 77;
 78 [label="charmender_attack"];
 32 -> 78;
 79 [label="intAtom"];
 34 -> 79;
 80 [label="squirtle_attack"];
 35 -> 80;
 81 [label="intAtom"];
 37 -> 81;
 82 [label="bulbasaur_attack"];
 38 -> 82;
 83 [label="intAtom"];
 40 -> 83;
 84 [label="turn"];
 41 -> 84;
 85 [label="intAtom"];
 43 -> 85;
 86 [label="andExpression"];
 44 -> 86;
 87 [label="block"];
 45 -> 87;
 88 [label="condition"];
 46 -> 88;
 89 [label="body"];
 46 -> 89;
 90 [label="condition"];
 47 -> 90;
 91 [label="body"];
 47 -> 91;
 92 [label="body"];
 48 -> 92;
 93 [label="begin"];
 49 -> 93;
 94 [label="intAtom"];
 51 -> 94;
 95 [label="end"];
 52 -> 95;
 96 [label="intAtom"];
 54 -> 96;
 97 [label="prime_counter"];
 55 -> 97;
 98 [label="intAtom"];
 57 -> 98;
 99 [label="IDENTIFIER"];
 58 -> 99;
 100 [label="functionCallExpression"];
 59 -> 100;
 101 [label="block"];
 60 -> 101;
 102 [label="eq1"];
 61 -> 102;
 103 [label="mulExpression"];
 63 -> 103;
 104 [label="+"];
 63 -> 104;
 105 [label="atomExpression"];
 63 -> 105;
 106 [label="function name"];
 64 -> 106;
 107 [label="arguments"];
 64 -> 107;
 108 [label="condition"];
 65 -> 108;
 109 [label="body"];
 65 -> 109;
 110 [label="eq2"];
 66 -> 110;
 111 [label="mulExpression"];
 68 -> 111;
 112 [label="/"];
 68 -> 112;
 113 [label="atomExpression"];
 68 -> 113;
 114 [label="function name"];
 69 -> 114;
 115 [label="arguments"];
 69 -> 115;
 116 [label="STRING"];
 71 -> 116;
 117 [label="INT"];
 73 -> 117;
 118 [label="INT"];
 75 -> 118;
 119 [label="INT"];
 77 -> 119;
 120 [label="INT"];
 79 -> 120;
 121 [label="INT"];
 81 -> 121;
 122 [label="INT"];
 83 -> 122;
 123 [label="INT"];
 85 -> 123;
 124 [label="comparisonExpression"];
 86 -> 124;
 125 [label="and"];
 86 -> 125;
 126 [label="comparisonExpression"];
 86 -> 126;
 127 [label="if statement"];
 87 -> 127;
 128 [label="comparisonExpression"];
 88 -> 128;
 129 [label="block"];
 89 -> 129;
 130 [label="comparisonExpression"];
 90 -> 130;
 131 [label="block"];
 91 -> 131;
 132 [label="block"];
 92 -> 132;
 133 [label="INT"];
 94 -> 133;
 134 [label="INT"];
 96 -> 134;
 135 [label="INT"];
 98 -> 135;
 136 [label="num"];
 99 -> 136;
 137 [label="function name"];
 100 -> 137;
 138 [label="arguments"];
 100 -> 138;
 139 [label="if statement"];
 101 -> 139;
 140 [label="atomExpression"];
 103 -> 140;
 141 [label="*"];
 103 -> 141;
 142 [label="negateExpression"];
 103 -> 142;
 143 [label="intAtom"];
 105 -> 143;
 144 [label="IDENTIFIER"];
 106 -> 144;
 145 [label="addExpression"];
 107 -> 145;
 146 [label="atomExpression"];
 108 -> 146;
 147 [label="block"];
 109 -> 147;
 148 [label="negateExpression"];
 111 -> 148;
 149 [label="*"];
 111 -> 149;
 150 [label="atomExpression"];
 111 -> 150;
 151 [label="intAtom"];
 113 -> 151;
 152 [label="IDENTIFIER"];
 114 -> 152;
 153 [label="addExpression"];
 115 -> 153;
 154 [label="\"Ash Ketchum\""];
 116 -> 154;
 155 [label="110"];
 117 -> 155;
 156 [label="125"];
 118 -> 156;
 157 [label="150"];
 119 -> 157;
 158 [label="40"];
 120 -> 158;
 159 [label="35"];
 121 -> 159;
 160 [label="25"];
 122 -> 160;
 161 [label="1"];
 123 -> 161;
 162 [label="atomExpression"];
 124 -> 162;
 163 [label=">"];
 124 -> 163;
 164 [label="atomExpression"];
 124 -> 164;
 165 [label="atomExpression"];
 126 -> 165;
 166 [label=">"];
 126 -> 166;
 167 [label="atomExpression"];
 126 -> 167;
 168 [label="'if' block"];
 127 -> 168;
 169 [label="'else' block"];
 127 -> 169;
 170 [label="atomExpression"];
 128 -> 170;
 171 [label=">="];
 128 -> 171;
 172 [label="atomExpression"];
 128 -> 172;
 173 [label="expressionStatement"];
 129 -> 173;
 174 [label="atomExpression"];
 130 -> 174;
 175 [label=">="];
 130 -> 175;
 176 [label="atomExpression"];
 130 -> 176;
 177 [label="expressionStatement"];
 131 -> 177;
 178 [label="expressionStatement"];
 132 -> 178;
 179 [label="5"];
 133 -> 179;
 180 [label="25"];
 134 -> 180;
 181 [label="0"];
 135 -> 181;
 182 [label="IDENTIFIER"];
 137 -> 182;
 183 [label="atomExpression"];
 138 -> 183;
 184 [label="atomExpression"];
 138 -> 184;
 185 [label="'if' block"];
 139 -> 185;
 186 [label="intAtom"];
 140 -> 186;
 187 [label="-"];
 142 -> 187;
 188 [label="atomExpression"];
 142 -> 188;
 189 [label="INT"];
 143 -> 189;
 190 [label="print"];
 144 -> 190;
 191 [label="atomExpression"];
 145 -> 191;
 192 [label="+"];
 145 -> 192;
 193 [label="functionCallExpression"];
 145 -> 193;
 194 [label="parenAtom"];
 146 -> 194;
 195 [label="expressionStatement"];
 147 -> 195;
 196 [label="-"];
 148 -> 196;
 197 [label="atomExpression"];
 148 -> 197;
 198 [label="intAtom"];
 150 -> 198;
 199 [label="INT"];
 151 -> 199;
 200 [label="print"];
 152 -> 200;
 201 [label="atomExpression"];
 153 -> 201;
 202 [label="+"];
 153 -> 202;
 203 [label="functionCallExpression"];
 153 -> 203;
 204 [label="identifierAtom"];
 162 -> 204;
 205 [label="intAtom"];
 164 -> 205;
 206 [label="identifierAtom"];
 165 -> 206;
 207 [label="intAtom"];
 167 -> 207;
 208 [label="condition"];
 168 -> 208;
 209 [label="body"];
 168 -> 209;
 210 [label="body"];
 169 -> 210;
 211 [label="identifierAtom"];
 170 -> 211;
 212 [label="intAtom"];
 172 -> 212;
 213 [label="functionCallExpression"];
 173 -> 213;
 214 [label="identifierAtom"];
 174 -> 214;
 215 [label="intAtom"];
 176 -> 215;
 216 [label="functionCallExpression"];
 177 -> 216;
 217 [label="functionCallExpression"];
 178 -> 217;
 218 [label="range"];
 182 -> 218;
 219 [label="identifierAtom"];
 183 -> 219;
 220 [label="identifierAtom"];
 184 -> 220;
 221 [label="condition"];
 185 -> 221;
 222 [label="body"];
 185 -> 222;
 223 [label="INT"];
 186 -> 223;
 224 [label="intAtom"];
 188 -> 224;
 225 [label="20"];
 189 -> 225;
 226 [label="stringAtom"];
 191 -> 226;
 227 [label="function name"];
 193 -> 227;
 228 [label="arguments"];
 193 -> 228;
 229 [label="'('"];
 194 -> 229;
 230 [label="comparisonExpression"];
 194 -> 230;
 231 [label="')'"];
 194 -> 231;
 232 [label="functionCallExpression"];
 195 -> 232;
 233 [label="intAtom"];
 197 -> 233;
 234 [label="INT"];
 198 -> 234;
 235 [label="12"];
 199 -> 235;
 236 [label="stringAtom"];
 201 -> 236;
 237 [label="function name"];
 203 -> 237;
 238 [label="arguments"];
 203 -> 238;
 239 [label="IDENTIFIER"];
 204 -> 239;
 240 [label="INT"];
 205 -> 240;
 241 [label="IDENTIFIER"];
 206 -> 241;
 242 [label="INT"];
 207 -> 242;
 243 [label="comparisonExpression"];
 208 -> 243;
 244 [label="block"];
 209 -> 244;
 245 [label="block"];
 210 -> 245;
 246 [label="IDENTIFIER"];
 211 -> 246;
 247 [label="INT"];
 212 -> 247;
 248 [label="function name"];
 213 -> 248;
 249 [label="arguments"];
 213 -> 249;
 250 [label="IDENTIFIER"];
 214 -> 250;
 251 [label="INT"];
 215 -> 251;
 252 [label="function name"];
 216 -> 252;
 253 [label="arguments"];
 216 -> 253;
 254 [label="function name"];
 217 -> 254;
 255 [label="arguments"];
 217 -> 255;
 256 [label="IDENTIFIER"];
 219 -> 256;
 257 [label="IDENTIFIER"];
 220 -> 257;
 258 [label="atomExpression"];
 221 -> 258;
 259 [label="block"];
 222 -> 259;
 260 [label="2"];
 223 -> 260;
 261 [label="INT"];
 224 -> 261;
 262 [label="STRING"];
 226 -> 262;
 263 [label="IDENTIFIER"];
 227 -> 263;
 264 [label="atomExpression"];
 228 -> 264;
 265 [label="("];
 229 -> 265;
 266 [label="atomExpression"];
 230 -> 266;
 267 [label="!="];
 230 -> 267;
 268 [label="atomExpression"];
 230 -> 268;
 269 [label=")"];
 231 -> 269;
 270 [label="function name"];
 232 -> 270;
 271 [label="arguments"];
 232 -> 271;
 272 [label="INT"];
 233 -> 272;
 273 [label="3"];
 234 -> 273;
 274 [label="STRING"];
 236 -> 274;
 275 [label="IDENTIFIER"];
 237 -> 275;
 276 [label="atomExpression"];
 238 -> 276;
 277 [label="charmender_HP"];
 239 -> 277;
 278 [label="0"];
 240 -> 278;
 279 [label="squirtle_HP"];
 241 -> 279;
 280 [label="0"];
 242 -> 280;
 281 [label="atomExpression"];
 243 -> 281;
 282 [label="=="];
 243 -> 282;
 283 [label="atomExpression"];
 243 -> 283;
 284 [label="assignmentStatement"];
 244 -> 284;
 285 [label="expressionStatement"];
 244 -> 285;
 286 [label="expressionStatement"];
 244 -> 286;
 287 [label="assignmentStatement"];
 244 -> 287;
 288 [label="assignmentStatement"];
 245 -> 288;
 289 [label="expressionStatement"];
 245 -> 289;
 290 [label="expressionStatement"];
 245 -> 290;
 291 [label="assignmentStatement"];
 245 -> 291;
 292 [label="charmender_HP"];
 246 -> 292;
 293 [label="1"];
 247 -> 293;
 294 [label="IDENTIFIER"];
 248 -> 294;
 295 [label="addExpression"];
 249 -> 295;
 296 [label="squirtle_HP"];
 250 -> 296;
 297 [label="1"];
 251 -> 297;
 298 [label="IDENTIFIER"];
 252 -> 298;
 299 [label="addExpression"];
 253 -> 299;
 300 [label="IDENTIFIER"];
 254 -> 300;
 301 [label="atomExpression"];
 255 -> 301;
 302 [label="begin"];
 256 -> 302;
 303 [label="end"];
 257 -> 303;
 304 [label="parenAtom"];
 258 -> 304;
 305 [label="if statement"];
 259 -> 305;
 306 [label="while loop"];
 259 -> 306;
 307 [label="5"];
 261 -> 307;
 308 [label="\"EQ1: \""];
 262 -> 308;
 309 [label="str"];
 263 -> 309;
 310 [label="identifierAtom"];
 264 -> 310;
 311 [label="identifierAtom"];
 266 -> 311;
 312 [label="intAtom"];
 268 -> 312;
 313 [label="IDENTIFIER"];
 270 -> 313;
 314 [label="atomExpression"];
 271 -> 314;
 315 [label="2"];
 272 -> 315;
 316 [label="\"EQ2: \""];
 274 -> 316;
 317 [label="str"];
 275 -> 317;
 318 [label="identifierAtom"];
 276 -> 318;
 319 [label="identifierAtom"];
 281 -> 319;
 320 [label="intAtom"];
 283 -> 320;
 321 [label="IDENTIFIER"];
 284 -> 321;
 322 [label="-="];
 284 -> 322;
 323 [label="atomExpression"];
 284 -> 323;
 324 [label="functionCallExpression"];
 285 -> 324;
 325 [label="functionCallExpression"];
 286 -> 325;
 326 [label="IDENTIFIER"];
 287 -> 326;
 327 [label="="];
 287 -> 327;
 328 [label="atomExpression"];
 287 -> 328;
 329 [label="IDENTIFIER"];
 288 -> 329;
 330 [label="-="];
 288 -> 330;
 331 [label="atomExpression"];
 288 -> 331;
 332 [label="functionCallExpression"];
 289 -> 332;
 333 [label="functionCallExpression"];
 290 -> 333;
 334 [label="IDENTIFIER"];
 291 -> 334;
 335 [label="="];
 291 -> 335;
 336 [label="atomExpression"];
 291 -> 336;
 337 [label="print"];
 294 -> 337;
 338 [label="atomExpression"];
 295 -> 338;
 339 [label="+"];
 295 -> 339;
 340 [label="atomExpression"];
 295 -> 340;
 341 [label="print"];
 298 -> 341;
 342 [label="atomExpression"];
 299 -> 342;
 343 [label="+"];
 299 -> 343;
 344 [label="atomExpression"];
 299 -> 344;
 345 [label="print"];
 300 -> 345;
 346 [label="stringAtom"];
 301 -> 346;
 347 [label="'('"];
 304 -> 347;
 348 [label="comparisonExpression"];
 304 -> 348;
 349 [label="')'"];
 304 -> 349;
 350 [label="'if' block"];
 305 -> 350;
 351 [label="target"];
 306 -> 351;
 352 [label="iterable"];
 306 -> 352;
 353 [label="body"];
 306 -> 353;
 354 [label="IDENTIFIER"];
 310 -> 354;
 355 [label="IDENTIFIER"];
 311 -> 355;
 356 [label="INT"];
 312 -> 356;
 357 [label="print"];
 313 -> 357;
 358 [label="stringAtom"];
 314 -> 358;
 359 [label="IDENTIFIER"];
 318 -> 359;
 360 [label="IDENTIFIER"];
 319 -> 360;
 361 [label="INT"];
 320 -> 361;
 362 [label="squirtle_HP"];
 321 -> 362;
 363 [label="identifierAtom"];
 323 -> 363;
 364 [label="function name"];
 324 -> 364;
 365 [label="arguments"];
 324 -> 365;
 366 [label="function name"];
 325 -> 366;
 367 [label="arguments"];
 325 -> 367;
 368 [label="turn"];
 326 -> 368;
 369 [label="intAtom"];
 328 -> 369;
 370 [label="charmender_HP"];
 329 -> 370;
 371 [label="identifierAtom"];
 331 -> 371;
 372 [label="function name"];
 332 -> 372;
 373 [label="arguments"];
 332 -> 373;
 374 [label="function name"];
 333 -> 374;
 375 [label="arguments"];
 333 -> 375;
 376 [label="turn"];
 334 -> 376;
 377 [label="intAtom"];
 336 -> 377;
 378 [label="identifierAtom"];
 338 -> 378;
 379 [label="stringAtom"];
 340 -> 379;
 380 [label="identifierAtom"];
 342 -> 380;
 381 [label="stringAtom"];
 344 -> 381;
 382 [label="STRING"];
 346 -> 382;
 383 [label="("];
 347 -> 383;
 384 [label="atomExpression"];
 348 -> 384;
 385 [label=">"];
 348 -> 385;
 386 [label="atomExpression"];
 348 -> 386;
 387 [label=")"];
 349 -> 387;
 388 [label="condition"];
 350 -> 388;
 389 [label="body"];
 350 -> 389;
 390 [label="IDENTIFIER"];
 351 -> 390;
 391 [label="functionCallExpression"];
 352 -> 391;
 392 [label="block"];
 353 -> 392;
 393 [label="eq1"];
 354 -> 393;
 394 [label="eq1"];
 355 -> 394;
 395 [label="0"];
 356 -> 395;
 396 [label="STRING"];
 358 -> 396;
 397 [label="eq2"];
 359 -> 397;
 398 [label="turn"];
 360 -> 398;
 399 [label="1"];
 361 -> 399;
 400 [label="IDENTIFIER"];
 363 -> 400;
 401 [label="IDENTIFIER"];
 364 -> 401;
 402 [label="addExpression"];
 365 -> 402;
 403 [label="IDENTIFIER"];
 366 -> 403;
 404 [label="addExpression"];
 367 -> 404;
 405 [label="INT"];
 369 -> 405;
 406 [label="IDENTIFIER"];
 371 -> 406;
 407 [label="IDENTIFIER"];
 372 -> 407;
 408 [label="addExpression"];
 373 -> 408;
 409 [label="IDENTIFIER"];
 374 -> 409;
 410 [label="addExpression"];
 375 -> 410;
 411 [label="INT"];
 377 -> 411;
 412 [label="IDENTIFIER"];
 378 -> 412;
 413 [label="STRING"];
 379 -> 413;
 414 [label="IDENTIFIER"];
 380 -> 414;
 415 [label="STRING"];
 381 -> 415;
 416 [label="\"Something went wrong!!!\""];
 382 -> 416;
 417 [label="identifierAtom"];
 384 -> 417;
 418 [label="intAtom"];
 386 -> 418;
 419 [label="atomExpression"];
 388 -> 419;
 420 [label="block"];
 389 -> 420;
 421 [label="i"];
 390 -> 421;
 422 [label="function name"];
 391 -> 422;
 423 [label="arguments"];
 391 -> 423;
 424 [label="if statement"];
 392 -> 424;
 425 [label="\"eq1 output not equal to 0\""];
 396 -> 425;
 426 [label="charmender_attack"];
 400 -> 426;
 427 [label="print"];
 401 -> 427;
 428 [label="addExpression"];
 402 -> 428;
 429 [label="+"];
 402 -> 429;
 430 [label="atomExpression"];
 402 -> 430;
 431 [label="print"];
 403 -> 431;
 432 [label="atomExpression"];
 404 -> 432;
 433 [label="+"];
 404 -> 433;
 434 [label="functionCallExpression"];
 404 -> 434;
 435 [label="0"];
 405 -> 435;
 436 [label="squirtle_attack"];
 406 -> 436;
 437 [label="print"];
 407 -> 437;
 438 [label="addExpression"];
 408 -> 438;
 439 [label="+"];
 408 -> 439;
 440 [label="atomExpression"];
 408 -> 440;
 441 [label="print"];
 409 -> 441;
 442 [label="atomExpression"];
 410 -> 442;
 443 [label="+"];
 410 -> 443;
 444 [label="functionCallExpression"];
 410 -> 444;
 445 [label="1"];
 411 -> 445;
 446 [label="name"];
 412 -> 446;
 447 [label="\"'s Charmender won!\""];
 413 -> 447;
 448 [label="name"];
 414 -> 448;
 449 [label="\"'s Squirtle won!\""];
 415 -> 449;
 450 [label="IDENTIFIER"];
 417 -> 450;
 451 [label="INT"];
 418 -> 451;
 452 [label="parenAtom"];
 419 -> 452;
 453 [label="expressionStatement"];
 420 -> 453;
 454 [label="IDENTIFIER"];
 422 -> 454;
 455 [label="atomExpression"];
 423 -> 455;
 456 [label="addExpression"];
 423 -> 456;
 457 [label="'if' block"];
 424 -> 457;
 458 [label="'else' block"];
 424 -> 458;
 459 [label="atomExpression"];
 428 -> 459;
 460 [label="+"];
 428 -> 460;
 461 [label="functionCallExpression"];
 428 -> 461;
 462 [label="stringAtom"];
 430 -> 462;
 463 [label="stringAtom"];
 432 -> 463;
 464 [label="function name"];
 434 -> 464;
 465 [label="arguments"];
 434 -> 465;
 466 [label="atomExpression"];
 438 -> 466;
 467 [label="+"];
 438 -> 467;
 468 [label="functionCallExpression"];
 438 -> 468;
 469 [label="stringAtom"];
 440 -> 469;
 470 [label="stringAtom"];
 442 -> 470;
 471 [label="function name"];
 444 -> 471;
 472 [label="arguments"];
 444 -> 472;
 473 [label="num"];
 450 -> 473;
 474 [label="0"];
 451 -> 474;
 475 [label="'('"];
 452 -> 475;
 476 [label="comparisonExpression"];
 452 -> 476;
 477 [label="')'"];
 452 -> 477;
 478 [label="functionCallExpression"];
 453 -> 478;
 479 [label="range"];
 454 -> 479;
 480 [label="intAtom"];
 455 -> 480;
 481 [label="functionCallExpression"];
 456 -> 481;
 482 [label="+"];
 456 -> 482;
 483 [label="atomExpression"];
 456 -> 483;
 484 [label="condition"];
 457 -> 484;
 485 [label="body"];
 457 -> 485;
 486 [label="body"];
 458 -> 486;
 487 [label="stringAtom"];
 459 -> 487;
 488 [label="function name"];
 461 -> 488;
 489 [label="arguments"];
 461 -> 489;
 490 [label="STRING"];
 462 -> 490;
 491 [label="STRING"];
 463 -> 491;
 492 [label="IDENTIFIER"];
 464 -> 492;
 493 [label="atomExpression"];
 465 -> 493;
 494 [label="stringAtom"];
 466 -> 494;
 495 [label="function name"];
 468 -> 495;
 496 [label="arguments"];
 468 -> 496;
 497 [label="STRING"];
 469 -> 497;
 498 [label="STRING"];
 470 -> 498;
 499 [label="IDENTIFIER"];
 471 -> 499;
 500 [label="atomExpression"];
 472 -> 500;
 501 [label="("];
 475 -> 501;
 502 [label="atomExpression"];
 476 -> 502;
 503 [label="=="];
 476 -> 503;
 504 [label="atomExpression"];
 476 -> 504;
 505 [label=")"];
 477 -> 505;
 506 [label="function name"];
 478 -> 506;
 507 [label="arguments"];
 478 -> 507;
 508 [label="INT"];
 480 -> 508;
 509 [label="function name"];
 481 -> 509;
 510 [label="arguments"];
 481 -> 510;
 511 [label="intAtom"];
 483 -> 511;
 512 [label="atomExpression"];
 484 -> 512;
 513 [label="block"];
 485 -> 513;
 514 [label="block"];
 486 -> 514;
 515 [label="STRING"];
 487 -> 515;
 516 [label="IDENTIFIER"];
 488 -> 516;
 517 [label="atomExpression"];
 489 -> 517;
 518 [label="\" damage\""];
 490 -> 518;
 519 [label="\"Squirtle got hurt :'( HP is: \""];
 491 -> 519;
 520 [label="str"];
 492 -> 520;
 521 [label="identifierAtom"];
 493 -> 521;
 522 [label="STRING"];
 494 -> 522;
 523 [label="IDENTIFIER"];
 495 -> 523;
 524 [label="atomExpression"];
 496 -> 524;
 525 [label="\" damage\""];
 497 -> 525;
 526 [label="\"Charmender got bitten! HP is: \""];
 498 -> 526;
 527 [label="str"];
 499 -> 527;
 528 [label="identifierAtom"];
 500 -> 528;
 529 [label="identifierAtom"];
 502 -> 529;
 530 [label="intAtom"];
 504 -> 530;
 531 [label="IDENTIFIER"];
 506 -> 531;
 532 [label="addExpression"];
 507 -> 532;
 533 [label="2"];
 508 -> 533;
 534 [label="IDENTIFIER"];
 509 -> 534;
 535 [label="mulExpression"];
 510 -> 535;
 536 [label="INT"];
 511 -> 536;
 537 [label="parenAtom"];
 512 -> 537;
 538 [label="breakStatement"];
 513 -> 538;
 539 [label="expressionStatement"];
 514 -> 539;
 540 [label="breakStatement"];
 514 -> 540;
 541 [label="\"Charmender did \""];
 515 -> 541;
 542 [label="str"];
 516 -> 542;
 543 [label="identifierAtom"];
 517 -> 543;
 544 [label="IDENTIFIER"];
 521 -> 544;
 545 [label="\"Squirtle faught back and did \""];
 522 -> 545;
 546 [label="str"];
 523 -> 546;
 547 [label="identifierAtom"];
 524 -> 547;
 548 [label="IDENTIFIER"];
 528 -> 548;
 549 [label="IDENTIFIER"];
 529 -> 549;
 550 [label="INT"];
 530 -> 550;
 551 [label="print"];
 531 -> 551;
 552 [label="atomExpression"];
 532 -> 552;
 553 [label="+"];
 532 -> 553;
 554 [label="functionCallExpression"];
 532 -> 554;
 555 [label="int"];
 534 -> 555;
 556 [label="atomExpression"];
 535 -> 556;
 557 [label="/"];
 535 -> 557;
 558 [label="atomExpression"];
 535 -> 558;
 559 [label="2"];
 536 -> 559;
 560 [label="'('"];
 537 -> 560;
 561 [label="comparisonExpression"];
 537 -> 561;
 562 [label="')'"];
 537 -> 562;
 563 [label="functionCallExpression"];
 539 -> 563;
 564 [label="IDENTIFIER"];
 543 -> 564;
 565 [label="squirtle_HP"];
 544 -> 565;
 566 [label="IDENTIFIER"];
 547 -> 566;
 567 [label="squirtle_HP"];
 548 -> 567;
 568 [label="num"];
 549 -> 568;
 569 [label="2"];
 550 -> 569;
 570 [label="stringAtom"];
 552 -> 570;
 571 [label="function name"];
 554 -> 571;
 572 [label="arguments"];
 554 -> 572;
 573 [label="identifierAtom"];
 556 -> 573;
 574 [label="intAtom"];
 558 -> 574;
 575 [label="("];
 560 -> 575;
 576 [label="mulExpression"];
 561 -> 576;
 577 [label="=="];
 561 -> 577;
 578 [label="atomExpression"];
 561 -> 578;
 579 [label=")"];
 562 -> 579;
 580 [label="function name"];
 563 -> 580;
 581 [label="arguments"];
 563 -> 581;
 582 [label="charmender_attack"];
 564 -> 582;
 583 [label="squirtle_attack"];
 566 -> 583;
 584 [label="STRING"];
 570 -> 584;
 585 [label="IDENTIFIER"];
 571 -> 585;
 586 [label="atomExpression"];
 572 -> 586;
 587 [label="IDENTIFIER"];
 573 -> 587;
 588 [label="INT"];
 574 -> 588;
 589 [label="atomExpression"];
 576 -> 589;
 590 [label="%"];
 576 -> 590;
 591 [label="atomExpression"];
 576 -> 591;
 592 [label="intAtom"];
 578 -> 592;
 593 [label="IDENTIFIER"];
 580 -> 593;
 594 [label="addExpression"];
 581 -> 594;
 595 [label="\"Prime: \""];
 584 -> 595;
 596 [label="str"];
 585 -> 596;
 597 [label="identifierAtom"];
 586 -> 597;
 598 [label="num"];
 587 -> 598;
 599 [label="2"];
 588 -> 599;
 600 [label="identifierAtom"];
 589 -> 600;
 601 [label="identifierAtom"];
 591 -> 601;
 602 [label="INT"];
 592 -> 602;
 603 [label="print"];
 593 -> 603;
 604 [label="atomExpression"];
 594 -> 604;
 605 [label="+"];
 594 -> 605;
 606 [label="functionCallExpression"];
 594 -> 606;
 607 [label="IDENTIFIER"];
 597 -> 607;
 608 [label="IDENTIFIER"];
 600 -> 608;
 609 [label="IDENTIFIER"];
 601 -> 609;
 610 [label="0"];
 602 -> 610;
 611 [label="stringAtom"];
 604 -> 611;
 612 [label="function name"];
 606 -> 612;
 613 [label="arguments"];
 606 -> 613;
 614 [label="num"];
 607 -> 614;
 615 [label="num"];
 608 -> 615;
 616 [label="i"];
 609 -> 616;
 617 [label="STRING"];
 611 -> 617;
 618 [label="IDENTIFIER"];
 612 -> 618;
 619 [label="atomExpression"];
 613 -> 619;
 620 [label="\"Prime: \""];
 617 -> 620;
 621 [label="str"];
 618 -> 621;
 622 [label="identifierAtom"];
 619 -> 622;
 623 [label="IDENTIFIER"];
 622 -> 623;
 624 [label="num"];
 623 -> 624;
}
